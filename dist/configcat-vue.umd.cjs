(function(t,n){typeof exports=="object"&&typeof module<"u"?n(exports,require("vue")):typeof define=="function"&&define.amd?define(["exports","vue"],n):(t=typeof globalThis<"u"?globalThis:t||self,n(t["configcat-vue"]={},t.Vue))})(this,function(t,n){"use strict";const a=(e,o)=>{const i=e.__vccOpts||e;for(const[s,r]of o)i[s]=r;return i},u={emits:["flagValueChanged"],props:{featureKey:{type:String,required:!0},userObject:{type:Object,required:!1,default:{}}},data(){return{isFeatureFlagEnabled:!1}},mounted(){this.configCatClient.getValueAsync(this.featureKey,!1,this.userObject).then(e=>{this.isFeatureFlagEnabled=e,this.$emit("flagValueChanged",e)})},unmounted(){this.configCatClient.dispose()}},c={key:0};function f(e,o,i,s,r,p){return r.isFeatureFlagEnabled?(n.openBlock(),n.createElementBlock("div",c,[n.renderSlot(e.$slots,"default")])):n.createCommentVNode("",!0)}const l=a(u,[["render",f]]),d={install:(e,o)=>{let i=(void 0)(o.SDKKey);e.config.globalProperties.configCatClient=i}};t.ConfigCatPlugin=d,t.FeatureWrapper=l,Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})});
