(function(t,n){typeof exports=="object"&&typeof module<"u"?n(exports,require("vue")):typeof define=="function"&&define.amd?define(["exports","vue"],n):(t=typeof globalThis<"u"?globalThis:t||self,n(t["configcat-vue"]={},t.Vue))})(this,function(t,n){"use strict";const a=(e,i)=>{const o=e.__vccOpts||e;for(const[s,r]of i)o[s]=r;return o},u={emits:["flagValueChanged"],props:{featureKey:{type:String,required:!0},userObject:{type:Object,required:!1,default:{}}},data(){return{isFeatureFlagEnabled:!1}},mounted(){this.configCatClient.getValueAsync(this.featureKey,!1,this.userObject).then(e=>{this.isFeatureFlagEnabled=e,this.$emit("flagValueChanged",e)})},unmounted(){this.configCatClient.dispose()}},c={key:0};function l(e,i,o,s,r,p){return r.isFeatureFlagEnabled?(n.openBlock(),n.createElementBlock("div",c,[n.renderSlot(e.$slots,"default")])):n.createCommentVNode("",!0)}const f=a(u,[["render",l]]),d={install:(e,i)=>{let o=(void 0)(i.SDKKey,i.clientOptions);e.config.globalProperties.configCatClient=o}};t.ConfigCatPlugin=d,t.FeatureWrapper=f,Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})});
